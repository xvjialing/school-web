{
    "swagger": "2.0",
    "info": {
        "title": "school API",
        "description": "school API",
        "version": "1.0.0",
        "termsOfService": "https://github.com/xvjialing",
        "contact": {
            "email": "xvjialing@outlook.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/article/": {
            "get": {
                "tags": [
                    "article"
                ],
                "description": "get Article",
                "operationId": "ArticleController.Get All",
                "parameters": [
                    {
                        "in": "header",
                        "name": "access_token",
                        "description": "access_token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pageSize",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pageNum",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Article"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "article"
                ],
                "description": "create Article",
                "operationId": "ArticleController.Post",
                "parameters": [
                    {
                        "in": "header",
                        "name": "access_token",
                        "description": "access_token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Article content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Article"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Article"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/article/{id}": {
            "get": {
                "tags": [
                    "article"
                ],
                "description": "get Article by id",
                "operationId": "ArticleController.Get One",
                "parameters": [
                    {
                        "in": "header",
                        "name": "access_token",
                        "description": "access_token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Article"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "article"
                ],
                "description": "update the Article",
                "operationId": "ArticleController.Put",
                "parameters": [
                    {
                        "in": "header",
                        "name": "access_token",
                        "description": "access_token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Article content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Article"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Article"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "article"
                ],
                "description": "delete the Article",
                "operationId": "ArticleController.Delete",
                "parameters": [
                    {
                        "in": "header",
                        "name": "access_token",
                        "description": "access_token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/file/": {
            "get": {
                "tags": [
                    "file"
                ],
                "description": "get File",
                "operationId": "FileController.Get All",
                "parameters": [
                    {
                        "in": "header",
                        "name": "access_token",
                        "description": "access_token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pageSize",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pageNum",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.File"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "file"
                ],
                "description": "create File",
                "operationId": "FileController.Post",
                "parameters": [
                    {
                        "in": "header",
                        "name": "access_token",
                        "description": "access_token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "form",
                        "name": "file",
                        "description": "body for File content",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "description": "文件类型",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.File"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/file/{id}": {
            "get": {
                "tags": [
                    "file"
                ],
                "description": "get File by id",
                "operationId": "FileController.Get One",
                "parameters": [
                    {
                        "in": "header",
                        "name": "access_token",
                        "description": "access_token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.File"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "file"
                ],
                "description": "update the File",
                "operationId": "FileController.Put",
                "parameters": [
                    {
                        "in": "header",
                        "name": "access_token",
                        "description": "access_token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for File content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.File"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.File"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "file"
                ],
                "description": "delete the File",
                "operationId": "FileController.Delete",
                "parameters": [
                    {
                        "in": "header",
                        "name": "access_token",
                        "description": "access_token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/leader/": {
            "get": {
                "tags": [
                    "leader"
                ],
                "description": "get Leader",
                "operationId": "LeaderController.Get All",
                "parameters": [
                    {
                        "in": "header",
                        "name": "access_token",
                        "description": "access_token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pageSize",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pageNum",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Leader"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "leader"
                ],
                "description": "create Leader",
                "operationId": "LeaderController.Post",
                "parameters": [
                    {
                        "in": "header",
                        "name": "access_token",
                        "description": "access_token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Leader content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Leader"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Leader"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/leader/index/minus_one/{id}": {
            "put": {
                "tags": [
                    "leader"
                ],
                "description": "Leader Index Minus 1",
                "operationId": "LeaderController.Put",
                "parameters": [
                    {
                        "in": "header",
                        "name": "access_token",
                        "description": "access_token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Leader"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            }
        },
        "/leader/index/plus_one/{id}": {
            "put": {
                "tags": [
                    "leader"
                ],
                "description": "Leader Index plus 1",
                "operationId": "LeaderController.Put",
                "parameters": [
                    {
                        "in": "header",
                        "name": "access_token",
                        "description": "access_token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Leader"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            }
        },
        "/leader/{id}": {
            "get": {
                "tags": [
                    "leader"
                ],
                "description": "get Leader by id",
                "operationId": "LeaderController.Get One",
                "parameters": [
                    {
                        "in": "header",
                        "name": "access_token",
                        "description": "access_token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Leader"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "leader"
                ],
                "description": "update the Leader",
                "operationId": "LeaderController.Put",
                "parameters": [
                    {
                        "in": "header",
                        "name": "access_token",
                        "description": "access_token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Leader content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Leader"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Leader"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "leader"
                ],
                "description": "delete the Leader",
                "operationId": "LeaderController.Delete",
                "parameters": [
                    {
                        "in": "header",
                        "name": "access_token",
                        "description": "access_token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/teacher/": {
            "get": {
                "tags": [
                    "teacher"
                ],
                "description": "get Teacher",
                "operationId": "TeacherController.Get All",
                "parameters": [
                    {
                        "in": "header",
                        "name": "access_token",
                        "description": "access_token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pageSize",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "pageNum",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Teacher"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "teacher"
                ],
                "description": "create Teacher",
                "operationId": "TeacherController.Post",
                "parameters": [
                    {
                        "in": "header",
                        "name": "access_token",
                        "description": "access_token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Teacher content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Teacher"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Teacher"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/teacher/{id}": {
            "get": {
                "tags": [
                    "teacher"
                ],
                "description": "get Teacher by id",
                "operationId": "TeacherController.Get One",
                "parameters": [
                    {
                        "in": "header",
                        "name": "access_token",
                        "description": "access_token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Teacher"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "teacher"
                ],
                "description": "update the Teacher",
                "operationId": "TeacherController.Put",
                "parameters": [
                    {
                        "in": "header",
                        "name": "access_token",
                        "description": "access_token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Teacher content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Teacher"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Teacher"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "teacher"
                ],
                "description": "delete the Teacher",
                "operationId": "TeacherController.Delete",
                "parameters": [
                    {
                        "in": "header",
                        "name": "access_token",
                        "description": "access_token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/token/info": {
            "post": {
                "tags": [
                    "token"
                ],
                "description": "GetToken",
                "operationId": "TokenController.GetTokenInfo",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "access_token",
                        "description": "access_token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/common.Result"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/token/token": {
            "post": {
                "tags": [
                    "token"
                ],
                "description": "GetToken",
                "operationId": "TokenController.GetToken",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "grant_type",
                        "description": "grant_type: password,refresh_token ...",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "username",
                        "description": "username",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "formData",
                        "name": "password",
                        "description": "password",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/common.Result"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            }
        },
        "/user/": {
            "get": {
                "tags": [
                    "user"
                ],
                "description": "get User",
                "operationId": "UserController.Get All",
                "parameters": [
                    {
                        "in": "header",
                        "name": "access_token",
                        "description": "access_token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "user"
                ],
                "description": "create User",
                "operationId": "UserController.Post",
                "parameters": [
                    {
                        "in": "header",
                        "name": "access_token",
                        "description": "access_token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for User content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{int} models.User"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "tags": [
                    "user"
                ],
                "description": "get User by id",
                "operationId": "UserController.Get One",
                "parameters": [
                    {
                        "in": "header",
                        "name": "access_token",
                        "description": "access_token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "user"
                ],
                "description": "update the User",
                "operationId": "UserController.Put",
                "parameters": [
                    {
                        "in": "header",
                        "name": "access_token",
                        "description": "access_token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for User content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "user"
                ],
                "description": "delete the User",
                "operationId": "UserController.Delete",
                "parameters": [
                    {
                        "in": "header",
                        "name": "access_token",
                        "description": "access_token",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        }
    },
    "definitions": {
        "1140.0xc000071f20.false": {
            "title": "false",
            "type": "object"
        },
        "common.Result": {
            "title": "Result",
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int64"
                },
                "data": {
                    "$ref": "#/definitions/1140.0xc000071f20.false"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "models.Article": {
            "title": "Article",
            "type": "object",
            "properties": {
                "Author": {
                    "type": "string"
                },
                "Content": {
                    "type": "string"
                },
                "CreateTime": {
                    "type": "string",
                    "format": "datetime"
                },
                "FileIdList": {
                    "description": "附件ID列表，英文逗号分隔，例如：1,2,3,4,5",
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Subtitle": {
                    "type": "string"
                },
                "Title": {
                    "type": "string"
                },
                "Type": {
                    "description": "文章类型",
                    "type": "string"
                }
            }
        },
        "models.File": {
            "title": "File",
            "type": "object",
            "properties": {
                "CreateTime": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Path": {
                    "description": "路径",
                    "type": "string"
                },
                "Type": {
                    "description": "文件类型",
                    "type": "string"
                }
            }
        },
        "models.Leader": {
            "title": "Leader",
            "type": "object",
            "properties": {
                "AvaterUrl": {
                    "description": "头像路径",
                    "type": "string"
                },
                "Detail": {
                    "description": "详情",
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Index": {
                    "description": "排序序号",
                    "type": "integer",
                    "format": "int64"
                },
                "Name": {
                    "description": "姓名",
                    "type": "string"
                },
                "Title": {
                    "description": "标题",
                    "type": "string"
                }
            }
        },
        "models.Teacher": {
            "title": "Teacher",
            "type": "object",
            "properties": {
                "AvaterUrl": {
                    "description": "图片路径",
                    "type": "string"
                },
                "Detail": {
                    "description": "详情",
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Name": {
                    "description": "姓名",
                    "type": "string"
                },
                "Title": {
                    "description": "标题",
                    "type": "string"
                },
                "Type": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.User": {
            "title": "User",
            "type": "object",
            "properties": {
                "Avatar": {
                    "type": "string"
                },
                "CreateTime": {
                    "type": "string",
                    "format": "datetime"
                },
                "Email": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "LastLogin": {
                    "type": "string",
                    "format": "datetime"
                },
                "Password": {
                    "type": "string"
                },
                "Phone": {
                    "type": "string"
                },
                "Username": {
                    "type": "string"
                }
            }
        }
    },
    "tags": [
        {
            "name": "article",
            "description": "文章相关操作\n"
        },
        {
            "name": "file",
            "description": "文件相关操作\n"
        },
        {
            "name": "token",
            "description": "用户认证相关操作\n"
        },
        {
            "name": "user",
            "description": "平台用户操作\n"
        },
        {
            "name": "teacher",
            "description": "教师相关操作\n"
        },
        {
            "name": "leader",
            "description": "领导相关操作\n"
        }
    ]
}